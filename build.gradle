plugins {
    id 'base'
    alias(libs.plugins.quarkus) apply false
    alias(libs.plugins.jandex) apply false
}

allprojects {
    group = 'io.pipeline'
    version = '1.0.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

// Configure Java projects
subprojects {
    pluginManager.withPlugin('java') {
        java {
            sourceCompatibility = JavaVersion.VERSION_21
            targetCompatibility = JavaVersion.VERSION_21
        }
        
        test {
            systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
            useJUnitPlatform()
        }
    }
}

// Skip grpc-stubs compilation and tests unless clean is involved
// This prevents the 10+ second gRPC stub regeneration during normal test runs
gradle.taskGraph.whenReady { taskGraph ->
    boolean isCleanBuild = taskGraph.hasTask(':clean') || 
                          taskGraph.allTasks.any { it.name.contains('clean') }
    boolean forceGrpcGeneration = project.hasProperty('forceGrpcGeneration')
    
    if (!isCleanBuild && !forceGrpcGeneration) {
        // Skip grpc-stubs tasks that would trigger compilation or code generation
        taskGraph.allTasks.each { task ->
            if (task.project.path == ':grpc-stubs' && 
                (task.name.contains('compile') || task.name.contains('test') || task.name.contains('build') ||
                 task.name.startsWith('quarkusGenerate') || task.name.contains('classes') || 
                 task.name.contains('resources') || task.name.contains('jar'))) {
                task.enabled = false
                println "ğŸš€ Skipping ${task.path} for faster test runs (use clean or -PforceGrpcGeneration=true to include)"
            }
        }
    }
}