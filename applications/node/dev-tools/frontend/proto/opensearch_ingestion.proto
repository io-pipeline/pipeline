syntax = "proto3";

package io.pipeline.ingestion;

import "pipeline_core_types.proto";

option java_multiple_files = true;
option java_package = "io.pipeline.ingestion.proto";
option java_outer_classname = "OpenSearchIngestionProto";

// The new, dedicated service for high-throughput document ingestion.
service OpenSearchIngestion {
  // Bidirectional stream for ingesting documents and receiving real-time acknowledgements.
  rpc streamDocuments(stream IngestionRequest) returns (stream IngestionResponse);
}

// A request to ingest a single document.
message IngestionRequest {
  // The document to be indexed, updated, or deleted.
  io.pipeline.search.model.PipeDoc document = 1;

  // A unique ID for this specific request, sent by the client.
  // This ID will be returned in the corresponding IngestionResponse for correlation.
  string request_id = 2;
}

// A response acknowledging the result of a single IngestionRequest.
message IngestionResponse {
  // The correlation ID from the IngestionRequest.
  string request_id = 1;

  // The ID of the document that was processed.
  string document_id = 2;

  // Whether the operation for this document was successful.
  bool success = 3;

  // A message providing details on the outcome (e.g., "Successfully indexed 5 chunks" or an error message).
  string message = 4;
}
