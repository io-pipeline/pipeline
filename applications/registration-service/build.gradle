plugins {
    id 'io.quarkus'
    id 'java-library'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Enforce JDK 21 at build time
tasks.withType(JavaCompile) {
    options.release = 21
    
    doFirst {
        def javaVersion = JavaVersion.current()
        if (javaVersion < JavaVersion.VERSION_21) {
            throw new GradleException("JDK 21 or higher is required to build registration-service. Current version: $javaVersion")
        }
    }
}

// Disable gRPC code generation - we consume from grpc-stubs instead
quarkus {
    quarkusBuildProperties.put("quarkus.generate-code.grpc.scan-for-proto", "none")
}

dependencies {
    // Import the pipeline-bom to manage dependency versions
    implementation platform(project(':bom'))

    // Quarkus dependencies
    implementation 'io.quarkus:quarkus-grpc'
    implementation 'io.quarkus:quarkus-container-image-docker'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-vertx'
    // Consul config extension is managed by Quarkus BOM
    implementation 'io.smallrye.reactive:smallrye-mutiny-vertx-consul-client'
    implementation 'io.smallrye.stork:stork-service-discovery-consul'
    implementation 'io.smallrye.stork:stork-service-registration-consul'
    implementation 'io.quarkus:quarkus-smallrye-stork'

    // Project dependencies
    implementation project(':grpc-stubs')
    implementation project(':libraries:consul-client')
    implementation project(':libraries:pipeline-api')

    // Test dependencies
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
}

