quarkus.application.name=pipedoc-repository-service

# Production port allocation
quarkus.http.port=38502
quarkus.http.host=0.0.0.0
quarkus.grpc.server.use-separate-server=false

# Development override
%dev.quarkus.http.port=38002
%dev.quarkus.http.host=0.0.0.0

# gRPC port configuration
#quarkus.grpc.server.port=38503
#%dev.quarkus.grpc.server.port=38003

# Consul service registration (register itself for discovery)
quarkus.stork.pipedoc-repository-service.service-registrar.type=consul
quarkus.stork.pipedoc-repository-service.service-registrar.consul-host=${CONSUL_HOST:consul}
quarkus.stork.pipedoc-repository-service.service-registrar.consul-port=${CONSUL_PORT:8500}

# Development override - use localhost in dev mode
%dev.quarkus.stork.pipedoc-repository-service.service-registrar.consul-host=localhost

# Health check configuration for Consul
quarkus.smallrye-health.root-path=/q/health

# Disable auto-registration for now (can enable later)
module.auto-register.enabled=false

# Enable gRPC reflection service for production (enabled by default in dev)
quarkus.grpc.server.enable-reflection-service=true

# Health check configuration - use localhost for local development
module.health.check.host=localhost

# gRPC Message Size Configuration (2GB - 1 byte, max int value)
quarkus.grpc.server.max-inbound-message-size=2147483647

# MongoDB Configuration
quarkus.mongodb.database=pipeline-dev-tools

# Dev Services Configuration - MongoDB with proper labels for sharing
%dev.quarkus.mongodb.devservices.enabled=true
%dev.quarkus.mongodb.devservices.service-name=pipeline-mongodb
%dev.quarkus.mongodb.devservices.shared=true
%dev.quarkus.mongodb.devservices.port=27017

# Test mode - use separate Dev Services
%test.quarkus.mongodb.devservices.enabled=true
%test.quarkus.mongodb.devservices.service-name=pipeline-mongodb-test
%test.quarkus.mongodb.devservices.shared=false

# Production MongoDB connection
%prod.quarkus.mongodb.connection-string=${MONGODB_CONNECTION_STRING:mongodb://localhost:27017}
# Do not stop the MongoDB container when the application exits
quarkus.mongodb.devservices.service-stop-on-exit=false
quarkus.mongodb.devservices.shared=true
quarkus.mongodb.devservices.service-name=pipedoc-repository
# Enable CORS for development
quarkus.rest.cors=true
quarkus.rest.cors.origins=/.*/

# Logging Configuration - reduce noise
quarkus.log.level=INFO
quarkus.log.category."io.pipeline".level=INFO
quarkus.log.category."io.vertx.ext.consul".level=WARN
quarkus.log.category."io.quarkus.grpc".level=WARN

# Container image (for future production builds)
quarkus.container-image.build=false
quarkus.container-image.name=pipedoc-repository-service
quarkus.container-image.tag=latest
quarkus.container-image.registry=localhost:5000
quarkus.container-image.insecure=true

# Kubernetes
quarkus.kubernetes.deployment-target=docker