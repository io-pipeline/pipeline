// source: pipeline_core_types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.io.pipeline.search.model.ActionType', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.BatchInfo', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.Blob', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.ChunkEmbedding', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.Embedding', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.ErrorData', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.FailedStepInputState', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.PipeDoc', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.PipeStream', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.SemanticChunk', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.SemanticProcessingResult', null, global);
goog.exportSymbol('proto.io.pipeline.search.model.StepExecutionRecord', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.BatchInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.pipeline.search.model.BatchInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.BatchInfo.displayName = 'proto.io.pipeline.search.model.BatchInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.Embedding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.Embedding.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.Embedding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.Embedding.displayName = 'proto.io.pipeline.search.model.Embedding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.ChunkEmbedding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.ChunkEmbedding.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.ChunkEmbedding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.ChunkEmbedding.displayName = 'proto.io.pipeline.search.model.ChunkEmbedding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.SemanticChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.pipeline.search.model.SemanticChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.SemanticChunk.displayName = 'proto.io.pipeline.search.model.SemanticChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.SemanticProcessingResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.SemanticProcessingResult.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.SemanticProcessingResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.SemanticProcessingResult.displayName = 'proto.io.pipeline.search.model.SemanticProcessingResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.PipeDoc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.PipeDoc.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.PipeDoc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.PipeDoc.displayName = 'proto.io.pipeline.search.model.PipeDoc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.Blob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.pipeline.search.model.Blob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.Blob.displayName = 'proto.io.pipeline.search.model.Blob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.FailedStepInputState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.pipeline.search.model.FailedStepInputState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.FailedStepInputState.displayName = 'proto.io.pipeline.search.model.FailedStepInputState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.ErrorData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.pipeline.search.model.ErrorData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.ErrorData.displayName = 'proto.io.pipeline.search.model.ErrorData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.StepExecutionRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.StepExecutionRecord.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.StepExecutionRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.StepExecutionRecord.displayName = 'proto.io.pipeline.search.model.StepExecutionRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.pipeline.search.model.PipeStream = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.pipeline.search.model.PipeStream.repeatedFields_, null);
};
goog.inherits(proto.io.pipeline.search.model.PipeStream, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.pipeline.search.model.PipeStream.displayName = 'proto.io.pipeline.search.model.PipeStream';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.BatchInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.BatchInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.BatchInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    batchId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalItems: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currentItemNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    batchName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sourceReference: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.BatchInfo}
 */
proto.io.pipeline.search.model.BatchInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.BatchInfo;
  return proto.io.pipeline.search.model.BatchInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.BatchInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.BatchInfo}
 */
proto.io.pipeline.search.model.BatchInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalItems(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentItemNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchName(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.BatchInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.BatchInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.BatchInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBatchId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalItems();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCurrentItemNumber();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBatchName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string batch_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getBatchId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.setBatchId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 total_items = 2;
 * @return {number}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getTotalItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.setTotalItems = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 current_item_number = 3;
 * @return {number}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getCurrentItemNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.setCurrentItemNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string batch_name = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getBatchName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.setBatchName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp started_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
*/
proto.io.pipeline.search.model.BatchInfo.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string source_reference = 6;
 * @return {string}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.getSourceReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.setSourceReference = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.BatchInfo} returns this
 */
proto.io.pipeline.search.model.BatchInfo.prototype.clearSourceReference = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.BatchInfo.prototype.hasSourceReference = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.Embedding.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.Embedding.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.Embedding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.Embedding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.Embedding.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vectorList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.Embedding}
 */
proto.io.pipeline.search.model.Embedding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.Embedding;
  return proto.io.pipeline.search.model.Embedding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.Embedding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.Embedding}
 */
proto.io.pipeline.search.model.Embedding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVector(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.Embedding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.Embedding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.Embedding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.Embedding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVectorList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
};


/**
 * optional string model_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.Embedding.prototype.getModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.Embedding} returns this
 */
proto.io.pipeline.search.model.Embedding.prototype.setModelId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.Embedding} returns this
 */
proto.io.pipeline.search.model.Embedding.prototype.clearModelId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.Embedding.prototype.hasModelId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated float vector = 2;
 * @return {!Array<number>}
 */
proto.io.pipeline.search.model.Embedding.prototype.getVectorList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.pipeline.search.model.Embedding} returns this
 */
proto.io.pipeline.search.model.Embedding.prototype.setVectorList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.Embedding} returns this
 */
proto.io.pipeline.search.model.Embedding.prototype.addVector = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.Embedding} returns this
 */
proto.io.pipeline.search.model.Embedding.prototype.clearVectorList = function() {
  return this.setVectorList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.ChunkEmbedding.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.ChunkEmbedding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.ChunkEmbedding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.ChunkEmbedding.toObject = function(includeInstance, msg) {
  var f, obj = {
    textContent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vectorList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    chunkId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    originalCharStartOffset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    originalCharEndOffset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    chunkGroupId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    chunkConfigId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding}
 */
proto.io.pipeline.search.model.ChunkEmbedding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.ChunkEmbedding;
  return proto.io.pipeline.search.model.ChunkEmbedding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.ChunkEmbedding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding}
 */
proto.io.pipeline.search.model.ChunkEmbedding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextContent(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVector(values[i]);
      }
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunkId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOriginalCharStartOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOriginalCharEndOffset(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunkGroupId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunkConfigId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.ChunkEmbedding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.ChunkEmbedding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.ChunkEmbedding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTextContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVectorList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string text_content = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getTextContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setTextContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated float vector = 2;
 * @return {!Array<number>}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getVectorList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setVectorList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.addVector = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearVectorList = function() {
  return this.setVectorList([]);
};


/**
 * optional string chunk_id = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getChunkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setChunkId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearChunkId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.hasChunkId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 original_char_start_offset = 4;
 * @return {number}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getOriginalCharStartOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setOriginalCharStartOffset = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearOriginalCharStartOffset = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.hasOriginalCharStartOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 original_char_end_offset = 5;
 * @return {number}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getOriginalCharEndOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setOriginalCharEndOffset = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearOriginalCharEndOffset = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.hasOriginalCharEndOffset = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string chunk_group_id = 6;
 * @return {string}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getChunkGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setChunkGroupId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearChunkGroupId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.hasChunkGroupId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string chunk_config_id = 7;
 * @return {string}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.getChunkConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.setChunkConfigId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ChunkEmbedding} returns this
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.clearChunkConfigId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ChunkEmbedding.prototype.hasChunkConfigId = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.SemanticChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.SemanticChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.SemanticChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunkId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    chunkNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    embeddingInfo: (f = msg.getEmbeddingInfo()) && proto.io.pipeline.search.model.ChunkEmbedding.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.SemanticChunk}
 */
proto.io.pipeline.search.model.SemanticChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.SemanticChunk;
  return proto.io.pipeline.search.model.SemanticChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.SemanticChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.SemanticChunk}
 */
proto.io.pipeline.search.model.SemanticChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunkId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChunkNumber(value);
      break;
    case 3:
      var value = new proto.io.pipeline.search.model.ChunkEmbedding;
      reader.readMessage(value,proto.io.pipeline.search.model.ChunkEmbedding.deserializeBinaryFromReader);
      msg.setEmbeddingInfo(value);
      break;
    case 4:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.SemanticChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.SemanticChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.SemanticChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChunkId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChunkNumber();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEmbeddingInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.pipeline.search.model.ChunkEmbedding.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string chunk_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.getChunkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticChunk} returns this
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.setChunkId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 chunk_number = 2;
 * @return {number}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.getChunkNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.SemanticChunk} returns this
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.setChunkNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ChunkEmbedding embedding_info = 3;
 * @return {?proto.io.pipeline.search.model.ChunkEmbedding}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.getEmbeddingInfo = function() {
  return /** @type{?proto.io.pipeline.search.model.ChunkEmbedding} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.ChunkEmbedding, 3));
};


/**
 * @param {?proto.io.pipeline.search.model.ChunkEmbedding|undefined} value
 * @return {!proto.io.pipeline.search.model.SemanticChunk} returns this
*/
proto.io.pipeline.search.model.SemanticChunk.prototype.setEmbeddingInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.SemanticChunk} returns this
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.clearEmbeddingInfo = function() {
  return this.setEmbeddingInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.hasEmbeddingInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, google.protobuf.Value> metadata = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.SemanticChunk} returns this
 */
proto.io.pipeline.search.model.SemanticChunk.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.SemanticProcessingResult.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.SemanticProcessingResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.SemanticProcessingResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.SemanticProcessingResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceFieldName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    chunkConfigId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    embeddingConfigId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    resultSetName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.io.pipeline.search.model.SemanticChunk.toObject, includeInstance),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.SemanticProcessingResult;
  return proto.io.pipeline.search.model.SemanticProcessingResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.SemanticProcessingResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceFieldName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChunkConfigId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmbeddingConfigId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultSetName(value);
      break;
    case 6:
      var value = new proto.io.pipeline.search.model.SemanticChunk;
      reader.readMessage(value,proto.io.pipeline.search.model.SemanticChunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 7:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader, "", new proto.google.protobuf.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.SemanticProcessingResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.SemanticProcessingResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.SemanticProcessingResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceFieldName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChunkConfigId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmbeddingConfigId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.io.pipeline.search.model.SemanticChunk.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string result_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getResultId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setResultId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_field_name = 2;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getSourceFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setSourceFieldName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string chunk_config_id = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getChunkConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setChunkConfigId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string embedding_config_id = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getEmbeddingConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setEmbeddingConfigId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string result_set_name = 5;
 * @return {string}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getResultSetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setResultSetName = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.clearResultSetName = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.hasResultSetName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated SemanticChunk chunks = 6;
 * @return {!Array<!proto.io.pipeline.search.model.SemanticChunk>}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.io.pipeline.search.model.SemanticChunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.pipeline.search.model.SemanticChunk, 6));
};


/**
 * @param {!Array<!proto.io.pipeline.search.model.SemanticChunk>} value
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
*/
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.io.pipeline.search.model.SemanticChunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.SemanticChunk}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.io.pipeline.search.model.SemanticChunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * map<string, google.protobuf.Value> metadata = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult} returns this
 */
proto.io.pipeline.search.model.SemanticProcessingResult.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.PipeDoc.repeatedFields_ = [6,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.PipeDoc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.PipeDoc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.PipeDoc.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceMimeType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    body: jspb.Message.getFieldWithDefault(msg, 5, ""),
    keywordsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    documentType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    revisionId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModifiedDate: (f = msg.getLastModifiedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    processedDate: (f = msg.getProcessedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    customData: (f = msg.getCustomData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    semanticResultsList: jspb.Message.toObjectList(msg.getSemanticResultsList(),
    proto.io.pipeline.search.model.SemanticProcessingResult.toObject, includeInstance),
    namedEmbeddingsMap: (f = msg.getNamedEmbeddingsMap()) ? f.toObject(includeInstance, proto.io.pipeline.search.model.Embedding.toObject) : [],
    blob: (f = msg.getBlob()) && proto.io.pipeline.search.model.Blob.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.PipeDoc}
 */
proto.io.pipeline.search.model.PipeDoc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.PipeDoc;
  return proto.io.pipeline.search.model.PipeDoc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.PipeDoc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.PipeDoc}
 */
proto.io.pipeline.search.model.PipeDoc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceMimeType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addKeywords(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevisionId(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModifiedDate(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setProcessedDate(value);
      break;
    case 12:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setCustomData(value);
      break;
    case 13:
      var value = new proto.io.pipeline.search.model.SemanticProcessingResult;
      reader.readMessage(value,proto.io.pipeline.search.model.SemanticProcessingResult.deserializeBinaryFromReader);
      msg.addSemanticResults(value);
      break;
    case 14:
      var value = msg.getNamedEmbeddingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.io.pipeline.search.model.Embedding.deserializeBinaryFromReader, "", new proto.io.pipeline.search.model.Embedding());
         });
      break;
    case 15:
      var value = new proto.io.pipeline.search.model.Blob;
      reader.readMessage(value,proto.io.pipeline.search.model.Blob.deserializeBinaryFromReader);
      msg.setBlob(value);
      break;
    case 16:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.PipeDoc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.PipeDoc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.PipeDoc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKeywordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModifiedDate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProcessedDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCustomData();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getSemanticResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.io.pipeline.search.model.SemanticProcessingResult.serializeBinaryToWriter
    );
  }
  f = message.getNamedEmbeddingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.io.pipeline.search.model.Embedding.serializeBinaryToWriter);
  }
  f = message.getBlob();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.pipeline.search.model.Blob.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_uri = 2;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getSourceUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setSourceUri = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearSourceUri = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasSourceUri = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string source_mime_type = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getSourceMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setSourceMimeType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearSourceMimeType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasSourceMimeType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string body = 5;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setBody = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearBody = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasBody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string keywords = 6;
 * @return {!Array<string>}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getKeywordsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setKeywordsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.addKeywords = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearKeywordsList = function() {
  return this.setKeywordsList([]);
};


/**
 * optional string document_type = 7;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getDocumentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setDocumentType = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearDocumentType = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasDocumentType = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string revision_id = 8;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getRevisionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.setRevisionId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearRevisionId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasRevisionId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp creation_date = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setCreationDate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearCreationDate = function() {
  return this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified_date = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getLastModifiedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setLastModifiedDate = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearLastModifiedDate = function() {
  return this.setLastModifiedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasLastModifiedDate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp processed_date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getProcessedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setProcessedDate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearProcessedDate = function() {
  return this.setProcessedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasProcessedDate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Struct custom_data = 12;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getCustomData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 12));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setCustomData = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearCustomData = function() {
  return this.setCustomData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasCustomData = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated SemanticProcessingResult semantic_results = 13;
 * @return {!Array<!proto.io.pipeline.search.model.SemanticProcessingResult>}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getSemanticResultsList = function() {
  return /** @type{!Array<!proto.io.pipeline.search.model.SemanticProcessingResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.pipeline.search.model.SemanticProcessingResult, 13));
};


/**
 * @param {!Array<!proto.io.pipeline.search.model.SemanticProcessingResult>} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setSemanticResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.io.pipeline.search.model.SemanticProcessingResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.SemanticProcessingResult}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.addSemanticResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.io.pipeline.search.model.SemanticProcessingResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearSemanticResultsList = function() {
  return this.setSemanticResultsList([]);
};


/**
 * map<string, Embedding> named_embeddings = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.io.pipeline.search.model.Embedding>}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getNamedEmbeddingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.io.pipeline.search.model.Embedding>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      proto.io.pipeline.search.model.Embedding));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearNamedEmbeddingsMap = function() {
  this.getNamedEmbeddingsMap().clear();
  return this;};


/**
 * optional Blob blob = 15;
 * @return {?proto.io.pipeline.search.model.Blob}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getBlob = function() {
  return /** @type{?proto.io.pipeline.search.model.Blob} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.Blob, 15));
};


/**
 * @param {?proto.io.pipeline.search.model.Blob|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
*/
proto.io.pipeline.search.model.PipeDoc.prototype.setBlob = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearBlob = function() {
  return this.setBlob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.hasBlob = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * map<string, string> metadata = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.pipeline.search.model.PipeDoc.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.PipeDoc} returns this
 */
proto.io.pipeline.search.model.PipeDoc.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.Blob.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.Blob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.Blob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.Blob.toObject = function(includeInstance, msg) {
  var f, obj = {
    blobId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: msg.getData_asB64(),
    mimeType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    encoding: jspb.Message.getFieldWithDefault(msg, 5, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.Blob}
 */
proto.io.pipeline.search.model.Blob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.Blob;
  return proto.io.pipeline.search.model.Blob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.Blob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.Blob}
 */
proto.io.pipeline.search.model.Blob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlobId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncoding(value);
      break;
    case 6:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.Blob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.Blob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.Blob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.Blob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string blob_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.Blob.prototype.getBlobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.setBlobId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.clearBlobId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.Blob.prototype.hasBlobId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.pipeline.search.model.Blob.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.io.pipeline.search.model.Blob.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.Blob.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string mime_type = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.Blob.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.setMimeType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.clearMimeType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.Blob.prototype.hasMimeType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string filename = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.Blob.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.setFilename = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.clearFilename = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.Blob.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string encoding = 5;
 * @return {string}
 */
proto.io.pipeline.search.model.Blob.prototype.getEncoding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.setEncoding = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.clearEncoding = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.Blob.prototype.hasEncoding = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> metadata = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.pipeline.search.model.Blob.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.Blob} returns this
 */
proto.io.pipeline.search.model.Blob.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.FailedStepInputState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.FailedStepInputState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.FailedStepInputState.toObject = function(includeInstance, msg) {
  var f, obj = {
    docState: (f = msg.getDocState()) && proto.io.pipeline.search.model.PipeDoc.toObject(includeInstance, f),
    blobState: (f = msg.getBlobState()) && proto.io.pipeline.search.model.Blob.toObject(includeInstance, f),
    customConfigStruct: (f = msg.getCustomConfigStruct()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    configParamsMap: (f = msg.getConfigParamsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState}
 */
proto.io.pipeline.search.model.FailedStepInputState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.FailedStepInputState;
  return proto.io.pipeline.search.model.FailedStepInputState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.FailedStepInputState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState}
 */
proto.io.pipeline.search.model.FailedStepInputState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.pipeline.search.model.PipeDoc;
      reader.readMessage(value,proto.io.pipeline.search.model.PipeDoc.deserializeBinaryFromReader);
      msg.setDocState(value);
      break;
    case 2:
      var value = new proto.io.pipeline.search.model.Blob;
      reader.readMessage(value,proto.io.pipeline.search.model.Blob.deserializeBinaryFromReader);
      msg.setBlobState(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setCustomConfigStruct(value);
      break;
    case 4:
      var value = msg.getConfigParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.FailedStepInputState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.FailedStepInputState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.FailedStepInputState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.pipeline.search.model.PipeDoc.serializeBinaryToWriter
    );
  }
  f = message.getBlobState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.pipeline.search.model.Blob.serializeBinaryToWriter
    );
  }
  f = message.getCustomConfigStruct();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConfigParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional PipeDoc doc_state = 1;
 * @return {?proto.io.pipeline.search.model.PipeDoc}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.getDocState = function() {
  return /** @type{?proto.io.pipeline.search.model.PipeDoc} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.PipeDoc, 1));
};


/**
 * @param {?proto.io.pipeline.search.model.PipeDoc|undefined} value
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
*/
proto.io.pipeline.search.model.FailedStepInputState.prototype.setDocState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.clearDocState = function() {
  return this.setDocState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.hasDocState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Blob blob_state = 2;
 * @return {?proto.io.pipeline.search.model.Blob}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.getBlobState = function() {
  return /** @type{?proto.io.pipeline.search.model.Blob} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.Blob, 2));
};


/**
 * @param {?proto.io.pipeline.search.model.Blob|undefined} value
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
*/
proto.io.pipeline.search.model.FailedStepInputState.prototype.setBlobState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.clearBlobState = function() {
  return this.setBlobState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.hasBlobState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Struct custom_config_struct = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.getCustomConfigStruct = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
*/
proto.io.pipeline.search.model.FailedStepInputState.prototype.setCustomConfigStruct = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.clearCustomConfigStruct = function() {
  return this.setCustomConfigStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.hasCustomConfigStruct = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> config_params = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.getConfigParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.FailedStepInputState} returns this
 */
proto.io.pipeline.search.model.FailedStepInputState.prototype.clearConfigParamsMap = function() {
  this.getConfigParamsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.ErrorData.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.ErrorData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.ErrorData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.ErrorData.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    technicalDetails: jspb.Message.getFieldWithDefault(msg, 3, ""),
    originatingStepName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    attemptedTargetStepName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inputStateAtFailure: (f = msg.getInputStateAtFailure()) && proto.io.pipeline.search.model.FailedStepInputState.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.ErrorData}
 */
proto.io.pipeline.search.model.ErrorData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.ErrorData;
  return proto.io.pipeline.search.model.ErrorData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.ErrorData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.ErrorData}
 */
proto.io.pipeline.search.model.ErrorData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTechnicalDetails(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatingStepName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttemptedTargetStepName(value);
      break;
    case 6:
      var value = new proto.io.pipeline.search.model.FailedStepInputState;
      reader.readMessage(value,proto.io.pipeline.search.model.FailedStepInputState.deserializeBinaryFromReader);
      msg.setInputStateAtFailure(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.ErrorData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.ErrorData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.ErrorData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.ErrorData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOriginatingStepName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInputStateAtFailure();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.pipeline.search.model.FailedStepInputState.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string error_message = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error_code = 2;
 * @return {string}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.setErrorCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.clearErrorCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ErrorData.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string technical_details = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getTechnicalDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.setTechnicalDetails = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.clearTechnicalDetails = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ErrorData.prototype.hasTechnicalDetails = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string originating_step_name = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getOriginatingStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.setOriginatingStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string attempted_target_step_name = 5;
 * @return {string}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getAttemptedTargetStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.setAttemptedTargetStepName = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.clearAttemptedTargetStepName = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ErrorData.prototype.hasAttemptedTargetStepName = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FailedStepInputState input_state_at_failure = 6;
 * @return {?proto.io.pipeline.search.model.FailedStepInputState}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getInputStateAtFailure = function() {
  return /** @type{?proto.io.pipeline.search.model.FailedStepInputState} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.FailedStepInputState, 6));
};


/**
 * @param {?proto.io.pipeline.search.model.FailedStepInputState|undefined} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
*/
proto.io.pipeline.search.model.ErrorData.prototype.setInputStateAtFailure = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.clearInputStateAtFailure = function() {
  return this.setInputStateAtFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ErrorData.prototype.hasInputStateAtFailure = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.ErrorData.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
*/
proto.io.pipeline.search.model.ErrorData.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.ErrorData} returns this
 */
proto.io.pipeline.search.model.ErrorData.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.ErrorData.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.StepExecutionRecord.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.StepExecutionRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.StepExecutionRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.StepExecutionRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    hopNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stepName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serviceInstanceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    processorLogsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    errorInfo: (f = msg.getErrorInfo()) && proto.io.pipeline.search.model.ErrorData.toObject(includeInstance, f),
    attemptedTargetStepName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord}
 */
proto.io.pipeline.search.model.StepExecutionRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.StepExecutionRecord;
  return proto.io.pipeline.search.model.StepExecutionRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.StepExecutionRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord}
 */
proto.io.pipeline.search.model.StepExecutionRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHopNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceInstanceId(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addProcessorLogs(value);
      break;
    case 8:
      var value = new proto.io.pipeline.search.model.ErrorData;
      reader.readMessage(value,proto.io.pipeline.search.model.ErrorData.deserializeBinaryFromReader);
      msg.setErrorInfo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttemptedTargetStepName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.StepExecutionRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.StepExecutionRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.StepExecutionRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHopNumber();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStepName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProcessorLogsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getErrorInfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.pipeline.search.model.ErrorData.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional int64 hop_number = 1;
 * @return {number}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getHopNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setHopNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string step_name = 2;
 * @return {string}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string service_instance_id = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getServiceInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setServiceInstanceId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearServiceInstanceId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.hasServiceInstanceId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
*/
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
*/
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string processor_logs = 7;
 * @return {!Array<string>}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getProcessorLogsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setProcessorLogsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.addProcessorLogs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearProcessorLogsList = function() {
  return this.setProcessorLogsList([]);
};


/**
 * optional ErrorData error_info = 8;
 * @return {?proto.io.pipeline.search.model.ErrorData}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getErrorInfo = function() {
  return /** @type{?proto.io.pipeline.search.model.ErrorData} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.ErrorData, 8));
};


/**
 * @param {?proto.io.pipeline.search.model.ErrorData|undefined} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
*/
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setErrorInfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearErrorInfo = function() {
  return this.setErrorInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.hasErrorInfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string attempted_target_step_name = 9;
 * @return {string}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.getAttemptedTargetStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.setAttemptedTargetStepName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord} returns this
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.clearAttemptedTargetStepName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.StepExecutionRecord.prototype.hasAttemptedTargetStepName = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.pipeline.search.model.PipeStream.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.pipeline.search.model.PipeStream.prototype.toObject = function(opt_includeInstance) {
  return proto.io.pipeline.search.model.PipeStream.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.pipeline.search.model.PipeStream} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.PipeStream.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: (f = msg.getDocument()) && proto.io.pipeline.search.model.PipeDoc.toObject(includeInstance, f),
    currentPipelineName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetStepName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currentHopNumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.io.pipeline.search.model.StepExecutionRecord.toObject, includeInstance),
    streamErrorData: (f = msg.getStreamErrorData()) && proto.io.pipeline.search.model.ErrorData.toObject(includeInstance, f),
    contextParamsMap: (f = msg.getContextParamsMap()) ? f.toObject(includeInstance, undefined) : [],
    actionType: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.pipeline.search.model.PipeStream}
 */
proto.io.pipeline.search.model.PipeStream.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.pipeline.search.model.PipeStream;
  return proto.io.pipeline.search.model.PipeStream.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.pipeline.search.model.PipeStream} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.pipeline.search.model.PipeStream}
 */
proto.io.pipeline.search.model.PipeStream.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreamId(value);
      break;
    case 2:
      var value = new proto.io.pipeline.search.model.PipeDoc;
      reader.readMessage(value,proto.io.pipeline.search.model.PipeDoc.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentPipelineName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetStepName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentHopNumber(value);
      break;
    case 6:
      var value = new proto.io.pipeline.search.model.StepExecutionRecord;
      reader.readMessage(value,proto.io.pipeline.search.model.StepExecutionRecord.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 7:
      var value = new proto.io.pipeline.search.model.ErrorData;
      reader.readMessage(value,proto.io.pipeline.search.model.ErrorData.deserializeBinaryFromReader);
      msg.setStreamErrorData(value);
      break;
    case 8:
      var value = msg.getContextParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {!proto.io.pipeline.search.model.ActionType} */ (reader.readEnum());
      msg.setActionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.pipeline.search.model.PipeStream.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.pipeline.search.model.PipeStream.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.pipeline.search.model.PipeStream} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.pipeline.search.model.PipeStream.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.pipeline.search.model.PipeDoc.serializeBinaryToWriter
    );
  }
  f = message.getCurrentPipelineName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetStepName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrentHopNumber();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.io.pipeline.search.model.StepExecutionRecord.serializeBinaryToWriter
    );
  }
  f = message.getStreamErrorData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.pipeline.search.model.ErrorData.serializeBinaryToWriter
    );
  }
  f = message.getContextParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getActionType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional string stream_id = 1;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getStreamId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PipeDoc document = 2;
 * @return {?proto.io.pipeline.search.model.PipeDoc}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getDocument = function() {
  return /** @type{?proto.io.pipeline.search.model.PipeDoc} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.PipeDoc, 2));
};


/**
 * @param {?proto.io.pipeline.search.model.PipeDoc|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
*/
proto.io.pipeline.search.model.PipeStream.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeStream.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string current_pipeline_name = 3;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getCurrentPipelineName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.setCurrentPipelineName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string target_step_name = 4;
 * @return {string}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getTargetStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.setTargetStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 current_hop_number = 5;
 * @return {number}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getCurrentHopNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.setCurrentHopNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated StepExecutionRecord history = 6;
 * @return {!Array<!proto.io.pipeline.search.model.StepExecutionRecord>}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.io.pipeline.search.model.StepExecutionRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.pipeline.search.model.StepExecutionRecord, 6));
};


/**
 * @param {!Array<!proto.io.pipeline.search.model.StepExecutionRecord>} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
*/
proto.io.pipeline.search.model.PipeStream.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.io.pipeline.search.model.StepExecutionRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.pipeline.search.model.StepExecutionRecord}
 */
proto.io.pipeline.search.model.PipeStream.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.io.pipeline.search.model.StepExecutionRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * optional ErrorData stream_error_data = 7;
 * @return {?proto.io.pipeline.search.model.ErrorData}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getStreamErrorData = function() {
  return /** @type{?proto.io.pipeline.search.model.ErrorData} */ (
    jspb.Message.getWrapperField(this, proto.io.pipeline.search.model.ErrorData, 7));
};


/**
 * @param {?proto.io.pipeline.search.model.ErrorData|undefined} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
*/
proto.io.pipeline.search.model.PipeStream.prototype.setStreamErrorData = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.clearStreamErrorData = function() {
  return this.setStreamErrorData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.pipeline.search.model.PipeStream.prototype.hasStreamErrorData = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, string> context_params = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getContextParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.clearContextParamsMap = function() {
  this.getContextParamsMap().clear();
  return this;};


/**
 * optional ActionType action_type = 9;
 * @return {!proto.io.pipeline.search.model.ActionType}
 */
proto.io.pipeline.search.model.PipeStream.prototype.getActionType = function() {
  return /** @type {!proto.io.pipeline.search.model.ActionType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.io.pipeline.search.model.ActionType} value
 * @return {!proto.io.pipeline.search.model.PipeStream} returns this
 */
proto.io.pipeline.search.model.PipeStream.prototype.setActionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * @enum {number}
 */
proto.io.pipeline.search.model.ActionType = {
  CREATE: 0,
  UPDATE: 1,
  DELETE: 2,
  NO_OP: 3
};

goog.object.extend(exports, proto.io.pipeline.search.model);
