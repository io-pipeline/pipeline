plugins {
    alias(libs.plugins.java)
    alias(libs.plugins.quarkus)
}



dependencies {
    implementation 'io.quarkus:quarkus-container-image-docker'
    implementation 'io.quarkiverse.quinoa:quarkus-quinoa:2.5.5'
    implementation platform(project(':bom'))
    implementation 'io.quarkus:quarkus-grpc'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-smallrye-stork'
    
    // REST API dependencies
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-cache'

    // Service Discovery dependencies for Consul
    implementation 'io.smallrye.stork:stork-service-discovery-consul'
    implementation 'io.smallrye.reactive:smallrye-mutiny-vertx-consul-client'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    implementation project(':grpc-stubs')
    implementation project(':libraries:pipeline-commons')
    implementation project(':libraries:pipeline-api')
    implementation project(':libraries:data-util')
    // Apache Commons IO for file operations
    testImplementation("commons-io:commons-io")
    // Apache Commons Compress for reading from JARs/ZIPs
    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    testImplementation("org.apache.commons:commons-compress")
    testImplementation("io.quarkus:quarkus-junit5-mockito")
    // Apache Tika dependencies - use standard package which includes most parsers
    implementation("org.apache.tika:tika-core:3.2.1")
    implementation("org.apache.tika:tika-parsers-standard-package:3.2.1")

}

group 'io.pipeline.module'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
